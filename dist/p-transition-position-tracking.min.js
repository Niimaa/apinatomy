!function(n,t){if("object"==typeof exports&&"object"==typeof module)module.exports=t(require("jquery"));else if("function"==typeof define&&define.amd)define(["jquery"],t);else{var e=t("object"==typeof exports?require("jquery"):n.jQuery);for(var r in e)("object"==typeof exports?exports:n)[r]=e[r]}}(this,function(n){return function(n){function t(r){if(e[r])return e[r].exports;var o=e[r]={exports:{},id:r,loaded:!1};return n[r].call(o.exports,o,o.exports,t),o.loaded=!0,o.exports}var e={};return t.m=n,t.c=e,t.p="",t(0)}([function(n,t,e){var r,o;r=[e(1),e(2)],o=function(n,t){"use strict";var e=n.circuitboard.plugin({name:"transition-position-tracking",resolves:["position-tracking","tile-grow-when-open"]}).modify("Tile.prototype");e.insert("construct",function(){var n=this;this.on("weight",function(){setTimeout(function(){var e=t.eachAnimationFrame(function(){n.resetPositioning()});n.element.one("transitionend",function(){e()})})})})}.apply(t,r),!(void 0!==o&&(n.exports=o))},function(t){t.exports=n},function(n,t,e){var r;r=function(){"use strict";var n={newClass:function(n,t){t=t||{};var e=function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];n.apply(this,t)};return e.prototype=t,e.prototype.constructor=e,e},newSubclass:function(n,t,e){e=e||{};var r=function(){for(var e=[],r=0;r<arguments.length;r++)e[r]=arguments[r];t.apply(this,[n.prototype.constructor].concat(e))};return r.prototype=Object.create(n.prototype,e),r.prototype.constructor=r,r},extend:function(n){for(var t=[],e=1;e<arguments.length;e++)t[e-1]=arguments[e];return t.forEach(function(t){for(var e in t)t.hasOwnProperty(e)&&(n[e]=t[e])}),n},field:function(n){return function(t){return t[n]}},object:function(t,e){return n.isUndefined(t[e])&&(t[e]={}),t[e]},array:function(t,e){return n.isUndefined(t[e])&&(t[e]=[]),t[e]},pull:function(n,t){var e=n.indexOf(t);-1!==e&&n.splice(e)},makeEmpty:function(n){for(;n.length>0;)n.pop()},bindA:function(n,t,e){return n.bind.apply(n,[t].concat(e))},bind:function(t,e){for(var r=[],o=2;o<arguments.length;o++)r[o-2]=arguments[o];return n.bindA(t[e],t,r)},applyConstructor:function(n,t){var e=n.bind.apply(n,[null].concat(t));return new e},assert:function(n,t){if(!n)throw new Error(t||"Assertion failed")},isUndefined:function(n){return"undefined"==typeof n},isDefined:function(n){return"undefined"!=typeof n},objValues:function(n){return Object.keys(n).map(function(t){return n[t]})},makePositioned:function(n){"static"===n.css("position")&&n.css("position","relative")},defOr:function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];for(var r=0;r<t.length;r+=1)if(n.isDefined(t[r]))return t[r]},debounce:function(n,t,e){var r;return function(){for(var o=[],i=0;i<arguments.length;i++)o[i]=arguments[i];var u=function(){r=null,n.apply(e,o)};clearTimeout(r),r=setTimeout(u,t)}},eachAnimationFrame:function(n,t){function e(){n.apply(t),r||requestAnimationFrame(e)}var r=!1;return e(),function(){r=!0}},oncePerStack:function(n,t){var e=!0;return function(){for(var r=[],o=0;o<arguments.length;o++)r[o]=arguments[o];e&&(e=!1,setTimeout(function(){e=!0},0),n.apply(t||this,r))}},observable:function(n,t){var e=void 0!==arguments[2]?arguments[2]:{},r=e.initial,o=e.validation,i=r;Object.defineProperty(n,t,{get:function(){return i},set:function(n){var e=i;o&&(n=o(n,e)),n!==e&&(i=n,this.trigger(t,n,e))}})},cached:function(t){function e(){var n=r;r=o(),i(r,n)||a.forEach(function(t){return t(r,n)})}var r,o=t.retrieve,i=t.isEqual||function(n,t){return n===t};setTimeout(e);var u=n.oncePerStack(e),c=function(){return u(),r},a=[];return c.onChange=function(n){return a.push(n),c},c}};return n.Position=n.newClass(function(n,t){this.top=n,this.left=t}),n.Position.subtract=function(t,e){return new n.Position(t.top-e.top,t.left-e.left)},n.Position.equals=function(t,e){return n.isDefined(t)&&n.isDefined(e)&&t.top===e.top&&t.left===e.left},n.Size=n.newClass(function(n,t){this.height=n,this.width=t}),n.Size.equals=function(t,e){return n.isDefined(t)&&n.isDefined(e)&&t.height===e.height&&t.width===e.width},n}.call(t,e,t,n),!(void 0!==r&&(n.exports=r))}])});