!function(e,t){if("object"==typeof exports&&"object"==typeof module)module.exports=t(require("jquery"));else if("function"==typeof define&&define.amd)define(["jquery"],t);else{var o=t("object"==typeof exports?require("jquery"):e.jQuery);for(var n in o)("object"==typeof exports?exports:e)[n]=o[n]}}(this,function(e){return function(e){function t(n){if(o[n])return o[n].exports;var r=o[n]={exports:{},id:n,loaded:!1};return e[n].call(r.exports,r,r.exports,t),r.loaded=!0,r.exports}var o={};return t.m=e,t.c=o,t.p="",t(0)}([function(e,t,o){var n,r;n=[o(1)],r=function(e){"use strict";var t=e.circuitboard.plugin({name:"tile-open",requires:["core"]}).modify("Tile.prototype");t.insert("construct",function(){var e=this;this.newObservable("open",{initial:!1,validation:function(e){return!!e}}),this.observe("open",function(t){t&&e.populateInnerTilemap()}),this.observe("open",function(t){e.element.toggleClass("open",t)}),this.observe("open",function(t){t||e.closestDescendantsByType("tile").forEach(function(e){e.open=!1})})})}.apply(t,n),!(void 0!==r&&(e.exports=r))},function(t){t.exports=e}])});