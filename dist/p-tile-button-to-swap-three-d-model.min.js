!function(e,t){if("object"==typeof exports&&"object"==typeof module)module.exports=t(require("jquery"));else if("function"==typeof define&&define.amd)define(["jquery"],t);else{var o=t("object"==typeof exports?require("jquery"):e.jQuery);for(var r in o)("object"==typeof exports?exports:e)[r]=o[r]}}(this,function(e){return function(e){function t(r){if(o[r])return o[r].exports;var n=o[r]={exports:{},id:r,loaded:!1};return e[r].call(n.exports,n,n.exports,t),n.loaded=!0,n.exports}var o={};return t.m=e,t.c=o,t.p="",t(0)}([function(e,t,o){var r,n;r=[o(1)],n=function(e){"use strict";var t=e.circuitboard.plugin({name:"tile-button-to-swap-three-d-model",requires:["tile-buttons","three-d-geometric-models"]});t.append("Tile.prototype.construct",function(){var e=[null].concat(this.children.filter(function(e){return"ThreeDModel"===e.type}));e.length>1&&this.addButton({name:"swap3dModel",icon:o(2)}).onValue(function(){var t;for(t=1;t<e.length;++t)if(e[t].visible){e[t].visible=!1;break}if(t=(t+1)%e.length,e[t]){e[t].traverseArtefactsByType("ThreeDModel",function(e){e.visible=!0});var o="-- ",r="Available parts of this 3D model:\n";e[t].traverseArtefactsByType("ThreeDModel",function(e){r+=o+e.id+"\n"},{beforeGoingIn:function(){o+="-- "},beforeGoingOut:function(){o=o.slice(3)}}),console.log(r)}})})}.apply(t,r),!(void 0!==n&&(e.exports=n))},function(t){t.exports=e},function(e,t,o){e.exports=o.p+"c485da7e639b4d2d69b187420fc2bf78.png"}])});